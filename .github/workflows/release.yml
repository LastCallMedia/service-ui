name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version'
        required: true

env:
  UI_BUILD_REACT: 'app/'
  RELEASE_DIR: 'release'
  LINUX_ARTIFACT_NAME: 'service-ui_linux_amd64'
  WINDOWS_ARTIFACT_NAME: 'service-ui_win_amd64.exe'
  UI_ARTIFACT_NAME: 'ui.tar.gz'
  VERSION_PLACEHOLDER: '{{.version}}'
  DOCKER_TEMPLATE_FILE: 'docker/DockerfileTmpl'
  DOCKER_BUILD_FILE: 'Dockerfile'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Get Date
        run: 'echo "BUILD_DATE=`date +%FT%T%z`" >> $GITHUB_ENV'

      - uses: actions/checkout@v2

      - name: Setup NodeJS
        uses: actions/setup-node@v2
        with:
          node-version: '12'

      - name: JS Build
        env:
          NODE_OPTIONS: '--max_old_space_size=4096'

        run: |
          npm --prefix ${{ env.UI_BUILD_REACT }} ci
          npm --prefix ${{ env.UI_BUILD_REACT }} run lint
          npm --prefix ${{ env.UI_BUILD_REACT }} run test:coverage
          npm --prefix ${{ env.UI_BUILD_REACT }} run build

      - name: Create release directory
        run: mkdir -v ${{ github.workspace }}/${{ env.RELEASE_DIR }}

      - name: UI assets compress
        run: 'cd ${{ env.UI_BUILD_REACT }}build && tar -czvf "${{ github.workspace }}/${{ env.RELEASE_DIR }}/${{ env.UI_ARTIFACT_NAME }}" ./'

      - name: Setup git credentials
        uses: oleksiyrudenko/gha-git-credentials@v2
        with:
          name: 'reportportal.io'
          email: 'support@reportportal.io'
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Update Dockerfile
        id: dockerfileUpdate
        run: |
          sed 's/${{ env.VERSION_PLACEHOLDER }}/${{ github.event.inputs.version }}/g' ${{ env.DOCKER_TEMPLATE_FILE }} > ${{ env.DOCKER_BUILD_FILE }}
          git add ${{ env.DOCKER_BUILD_FILE }}
          export CHANGED=`git status | grep ${{ env.DOCKER_BUILD_FILE }} | xargs`
          [ -z "${CHANGED}" ] || git commit -m "Dockerfile update"
          git push

      - name: Tag release
        id: tagRelease
        run: |
          git tag -a ${{ github.event.inputs.version }} -m 'Release ${{ github.event.inputs.version }}'
          git push --tags

      - name: Create Release
        id: createRelease
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.event.inputs.version }}
          release_name: Release ${{ github.event.inputs.version }}
          draft: false
          prerelease: false

      - name: Upload UI Asset
        id: upload-ui-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.createRelease.outputs.upload_url }}
          asset_path: "${{ github.workspace }}/${{ env.RELEASE_DIR }}/${{ env.UI_ARTIFACT_NAME }}"
          asset_name: ${{ env.UI_ARTIFACT_NAME }}
          asset_content_type: application/gzip

      - name: Bump version
        uses: HardNorth/github-version-generate@v1.1.0
        with:
          version: ${{ github.event.inputs.version }}-SNAPSHOT
          next-version-increment-patch: true

      - name: Commit version
        run: |
          echo ${{  env.NEXT_VERSION  }} > ${{ github.workspace }}/VERSION
          git add ${{ github.workspace }}/VERSION
          export CHANGED=`git status | grep VERSION | xargs`
          [ -z "${CHANGED}" ] || git commit -m 'Bump new snapshot version'
          git push
